defaults: &defaults
  docker:
    - image: gcr.io/planet-4-151612/p4-builder:latest
  working_directory:  /home/circleci/

version: 2

jobs:
  build-branch:
    <<: *defaults
    environment:
      APP_HOSTNAME: k8s.p4.greenpeace.org
      APP_HOSTPATH: base
      CLOUDSQL_INSTANCE: p4-develop-k8s
      CONTAINER_PREFIX: planet4-base
      GOOGLE_PROJECT_ID: planet-4-151612
      HELM_NAMESPACE: develop
      TYPE: "Build"
      WP_DB_NAME: planet4-base_wordpress
      WP_TITLE: Greenpeace Base Development
    steps:
      - setup_remote_docker
      - run:
          name: Configure
          command: |
            activate-gcloud-account.sh
            mkdir -p /tmp/workspace/var
            mkdir -p /tmp/workspace/src
            echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
      - run:
          name: Build containers
          working_directory: /home/circleci
          command: make
      - run:
          name: Notify failure
          when: on_fail
          command: notify-job-failure.sh
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  test-codeception:
    <<: *defaults
    steps:
      - setup_remote_docker

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Clone planet4-docker-compose
          command: |
            git clone https://github.com/greenpeace/planet4-docker-compose

      - run:
          name: Run tests
          command: |
            export BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)"
            export APP_IMAGE=gcr.io/planet-4-151612/planet4-base-app:${BUILD_TAG}
            export OPENRESTY_IMAGE=gcr.io/planet-4-151612/planet4-base-openresty:${BUILD_TAG}

            pushd planet4-docker-compose
            make ci
            popd

      - run:
          name: Extract test artifacts
          when: always
          command: |
            export BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)"
            export APP_IMAGE=gcr.io/planet-4-151612/planet4-base-app:${BUILD_TAG}
            export OPENRESTY_IMAGE=gcr.io/planet-4-151612/planet4-base-openresty:${BUILD_TAG}

            pushd planet4-docker-compose
            make ci-extract-artifacts
            popd

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var

      - store_test_results:
          path: /tmp/artifacts

      - store_artifacts:
          path: /tmp/artifacts

  build-and-test-codeception:
    <<: *defaults
    environment:
      APP_HOSTNAME: www.planet4.test
      APP_HOSTPATH:
      CLOUDSQL_INSTANCE: p4-develop-k8s
      CONTAINER_PREFIX: planet4-base
      GOOGLE_PROJECT_ID: planet-4-151612
      HELM_NAMESPACE: develop
      TYPE: "Build"
      WP_DB_NAME: planet4-base_wordpress
      WP_TITLE: Greenpeace Base Development
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build - Configure
          command: |
            activate-gcloud-account.sh
            mkdir -p /tmp/workspace/var
            mkdir -p /tmp/workspace/src
            echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
      - run:
          name: Build - Build containers
          working_directory: /home/circleci
          command: |
            echo "Master theme branch is ${MASTER_THEME_BRANCH}"
            make
      - run:
          name: Test - Clone planet4-docker-compose
          command: |
            git clone https://github.com/greenpeace/planet4-docker-compose
      - run:
          name: Test - Run tests
          command: |
            export BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)"
            export APP_IMAGE=gcr.io/planet-4-151612/planet4-base-app:${BUILD_TAG}
            export OPENRESTY_IMAGE=gcr.io/planet-4-151612/planet4-base-openresty:${BUILD_TAG}

            pushd planet4-docker-compose
            make ci
            popd

      - run:
          name: Test - Extract test artifacts
          when: always
          command: |
            export BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)"
            export APP_IMAGE=gcr.io/planet-4-151612/planet4-base-app:${BUILD_TAG}
            export OPENRESTY_IMAGE=gcr.io/planet-4-151612/planet4-base-openresty:${BUILD_TAG}

            pushd planet4-docker-compose
            make ci-extract-artifacts
            popd

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var

      - store_test_results:
          path: /tmp/artifacts

      - store_artifacts:
          path: /tmp/artifacts
      - run:
          name: Build - Notify failure
          when: on_fail
          command: notify-job-failure.sh

  deploy-develop:
    <<: *defaults
    environment:
      APP_HOSTNAME: k8s.p4.greenpeace.org
      APP_HOSTPATH: base
      CLOUDSQL_INSTANCE: p4-develop-k8s
      CONTAINER_PREFIX: planet4-base
      GOOGLE_PROJECT_ID: planet-4-151612
      HELM_NAMESPACE: develop
      TYPE: "Deployment"
      WP_DB_NAME: planet4-base_wordpress
      WP_TITLE: Greenpeace Base Development
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: activate-gcloud-account.sh
      - run:
          name: Deploy new containers
          environment:
            NEWRELIC_APPNAME: P4 base Development
          command: |
            export BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)"
            make deploy
      - run:
          name: Notify failure
          when: on_fail
          command: notify-job-failure.sh

  trigger-planet4:
    docker:
      - image: gcr.io/planet-4-151612/circleci-base:latest
    environment:
      TYPE: "Trigger"
    working_directory: /tmp/workspace
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Trigger Planet 4 NRO sites
          command: |
              sites=(
                "africa" \
                "argentina" \
                "belgium" \
                "brasil" \
                "canada" \
                "chile" \
                "colombia" \
                "croatia" \
                "czech-republic" \
                "defaultcontent" \
                "denmark" \
                "dev-search" \
                "eu-unit" \
                "flibble" \
                "finland" \
                "greece" \
                "handbook" \
                "hungary" \
                "india" \
                "international" \
                "italy" \
                "japan" \
                "luxembourg" \
                "mena" \
                "mexico" \
                "netherlands" \
                "new-zealand" \
                "storytelling" \
                "sweden" \
              )
              for i in "${sites[@]}"
              do
                trigger-build-api.sh planet4-$i develop
              done
      - run:
          name: Notify failure
          when: on_fail
          command: notify-job-failure.sh

  notify-promote:
    docker:
      - image: gcr.io/planet-4-151612/circleci-base:latest
    working_directory:  /tmp/workspace/src
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Notify of held workflow
          command: |
            new_version=$(git-new-version.sh)
            echo $new_version > /tmp/workspace/var/new_version
            TYPE="@rawalker Promote $new_version" notify-job-hold.sh
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="@rawalker Promote $new_version" notify-job-failure.sh
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - .

  promote:
    docker:
      - image: gcr.io/planet-4-151612/circleci-base:latest
    working_directory:  /tmp/workspace/src
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Notify of resumed workflow
          command: TYPE="@rawalker Promote $(cat /tmp/workspace/var/new_version)" notify-job-resume.sh
      - run: git flow init -d
      - deploy:
          name: Start release
          command: release-start.sh $(cat /tmp/workspace/var/new_version)
      - deploy:
          name: Update version numbers
          command: |
            # Get new version number and strip leading 'v' from tag
            tag=$(sed 's/^v//' /tmp/workspace/var/new_version)
            # Update composer.json version number
            mv composer.json /tmp/workspace/composer.old.json
            jq -M ".version=\"$tag\"" < /tmp/workspace/composer.old.json > composer.json
            # Re-validate composer.json
            if ! composer validate
            then
              TYPE="Composer validation" notify-job-failure.sh
            fi
            # Commit changed files
            git commit -a -m ":robot: Release v$tag"
      - deploy:
          name: Finish release
          command: |
            cd /tmp/workspace/src
            # Finish release
            if release-finish.sh $(cat /tmp/workspace/var/new_version)
            then
              TYPE="Release" notify-job-success.sh
            else
              TYPE="Release" notify-job-failure.sh
            fi
      - run:
          name: Notify failure
          when: on_fail
          command: TYPE="Release $(cat /tmp/workspace/var/new_version)" notify-job-failure.sh



workflows:
  version: 2
  develop:
    jobs:
    - build-branch:
        context: org-global
        filters:
          branches:
            ignore: master
          tags:
            ignore: /.*/
    - test-codeception:
        context: org-global
        requires:
          - build-branch
        filters:
          branches:
            only: develop
    - deploy-develop:
        context: org-global
        requires:
          - build-branch
        filters:
          branches:
            only: develop
    - hold-promote:
        type: approval
        requires:
          - deploy-develop
        filters:
          branches:
            only: develop
    - hold-trigger-planet4:
        type: approval
        requires:
          - deploy-develop
        filters:
          branches:
            only: develop
    - trigger-planet4:
        context: org-global
        requires:
          - hold-trigger-planet4
        filters:
          branches:
            only: develop
    - notify-promote:
        context: org-global
        requires:
          - deploy-develop
        filters:
          branches:
            only: develop
    - promote:
        context: org-global
        requires:
          - hold-promote
          - notify-promote
        filters:
          branches:
            only: develop
