---
version: 2.1

parameters:
  promote:
    type: boolean
    default: false

docker_auth: &docker_auth
  username: $DOCKERHUB_USERNAME
  password: $DOCKERHUB_PASSWORD

defaults: &defaults
  docker:
    - image: greenpeaceinternational/p4-builder:latest
      auth:
        <<: *docker_auth
  working_directory: /home/circleci/

orbs:
  slack: circleci/slack@3.4.2

jobs:
  lint:
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    steps:
      - checkout
      - run: make lint

  build:
    <<: *defaults
    environment:
      TYPE: "Build"
      APP_HOSTNAME: www-dev.greenpeace.org
      APP_HOSTPATH: base
      CONTAINER_PREFIX: planet4-base
      GOOGLE_PROJECT_ID: planet-4-151612
      HELM_NAMESPACE: develop
      WP_TITLE: Greenpeace Base Development
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Configure
          command: |
            activate-gcloud-account.sh
            mkdir -p /tmp/workspace/var
            mkdir -p /tmp/workspace/src
            echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
      - run:
          name: Build containers
          working_directory: /home/circleci
          command: |
            GIT_REF=${CIRCLE_BRANCH} make
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  test:
    <<: *defaults
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Clone planet4-docker-compose
          command: |
            git clone https://github.com/greenpeace/planet4-docker-compose
      - run:
          name: Start docker-compose
          command: |
            export BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)"
            export APP_IMAGE=gcr.io/planet-4-151612/planet4-base-app:${BUILD_TAG}
            export OPENRESTY_IMAGE=gcr.io/planet-4-151612/planet4-base-openresty:${BUILD_TAG}
            make -C planet4-docker-compose hosts ci
      - run:
          name: Install codeception
          command: |
            make -C planet4-docker-compose install-codeception test-env-info
      - run:
          name: Run tests
          command: |
            make -C planet4-docker-compose test-codeception
      - run:
          name: Extract test artifacts
          when: always
          command: |
            export BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)"
            export APP_IMAGE=gcr.io/planet-4-151612/planet4-base-app:${BUILD_TAG}
            export OPENRESTY_IMAGE=gcr.io/planet-4-151612/planet4-base-openresty:${BUILD_TAG}
            make -C planet4-docker-compose ci-extract-artifacts
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
      - store_test_results:
          path: planet4-docker-compose/artifacts
      - store_artifacts:
          path: planet4-docker-compose/artifacts

  release-sites:
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    environment:
      TYPE: "Trigger"
    working_directory: /tmp/workspace
    parameters:
      pipeline:
        default: "main"
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Trigger sites release
          command: |
              declare -a sites
              mapfile -t sites < sites.txt
              for i in "${sites[@]}"
              do
                trigger-build.sh git@github.com:greenpeace/planet4-$i.git << parameters.pipeline >>
              done
      - when:
          condition:
            equal: [ "main", << parameters.pipeline >> ]
          steps:
            - run:
                name: Trigger dev sites release
                command: |
                    declare -a dev_sites
                    mapfile -t dev_sites < dev_sites.txt
                    for i in "${dev_sites[@]}"
                    do
                      trigger-build.sh git@github.com:greenpeace/planet4-$i.git << parameters.pipeline >>
                    done

  changelog:
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    working_directory: /tmp/workspace/
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure git
          command: |
            mkdir -p ~/.ssh
            echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
            ' >> ~/.ssh/known_hosts
      - run:
          name: Update Changelog and notify
          command: |
            version=$(git describe --abbrev=0 --tags)
            changelog.sh "$version"
      - slack/notify:
          channel: C014UMRC4AJ
          mentions: here
          color: '#78c043'
          message: "A new release is currently being deployed.\nCheck the <https://support.greenpeace.org/planet4/tech/changelog|Changelog> for the full list of changes"
          include_job_number_field: false
          include_project_field: false
          include_visit_job_action: false

  rollback-sites:
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    working_directory: /tmp/workspace
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Trigger sites rollback
          command: |
              declare -a sites
              mapfile -t sites < sites.txt
              for i in "${sites[@]}"
              do
                ./scripts/rollback.sh planet4-$i ${CIRCLE_TOKEN}
              done

  promote:
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    steps:
      - checkout

workflows:
  develop:
    jobs:
      - build:
          context: org-global
          filters:
            branches:
              only: main
      - test:
          context: org-global
          requires:
            - build
          filters:
            branches:
              only: main
      - hold-release:
          type: approval
          requires:
            - test
          filters:
            branches:
              only: main
      - release-sites:
          context: org-global
          pipeline: main
          requires:
            - hold-release
          filters:
            branches:
              only: main

  cron-develop:
    triggers:
      - schedule:
          cron: "0 12 * * 0"
          filters:
            branches:
              only:
                - main
    jobs:
      - build:
          context: org-global
      - test:
          context: org-global
          requires:
            - build
      - release-sites:
          context: org-global
          pipeline: main
          requires:
            - test

  promote:
    when: << pipeline.parameters.promote >>
    jobs:
      - promote:
          context: org-global

  production:
    jobs:
      - hold-release:
          type: approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - release-sites:
          context: org-global
          pipeline: tag
          requires:
            - hold-release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - hold-changelog:
          type: approval
          requires:
            - release-sites
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - changelog:
          context: org-global
          requires:
            - hold-changelog
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

  rollback:
    jobs:
      - hold-rollback:
          type: approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /rollback-v*/
      - rollback-sites:
          context: org-global
          requires:
            - hold-rollback
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /rollback-v*/

  branch:
    jobs:
      - build:
          context: org-global
          filters:
            branches:
              ignore:
                - main
      - test:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore:
                - main
